---
layout:     post
title:      "HDU1548 胜利大逃亡"
subtitle:   " BFS"
date:        2017-02-14 22:24:17
author:     "Luoyayu"
header-img: "img/messi.jpg"
catalog: true
tags:
    - ACM_搜索(bfs)
---

###   Problem  <strong>胜利大逃亡</strong>   

>   Problem Description       
     
Ignatius被魔王抓走了,有一天魔王出差去了,这可是Ignatius逃亡的好机会. 
魔王住在一个城堡里,城堡是一个$$A*B*C$$的立方体,可以被表示成A个$$B*C$$的矩阵,刚开始Ignatius被关在$$(0,0,0)$$的位置,离开城堡的门在$$(A-1,B-1,C-1)$$的位置,现在知道魔王将在T分钟后回到城堡,Ignatius每分钟能从一个坐标走到相邻的六个坐标中的其中一个.现在给你城堡的地图,请你计算出Ignatius能否在魔王回来前离开城堡(只要走到出口就算离开城堡,如果走到出口的时候魔王刚好回来也算逃亡成功),如果可以请输出需要多少分钟才能离开,如果不能则输出$$-1$$. 


>  Input  

![](\img\in-post\1.jpg)
输入数据的第一行是一个正整数K,表明测试数据的数量.每组测试数据的第一行是四个正整数A,B,C和T(1<=A,B,C<=50,1<=T<=1000),它们分别代表城堡的大小和魔王回来的时间.然后是A块输入数据(先是第0块,然后是第1块,第2块......),每块输入数据有B行,每行有C个正整数,代表迷宫的布局,其中0代表路,1代表墙.(如果对输入描述不清楚,可以参考Sample Input中的迷宫描述,它表示的就是上图中的迷宫) 

>   Output     
 
 对于每组测试数据,如果Ignatius能够在魔王回来前离开城堡,那么请输出他最少需要多少分钟,否则输出-1. 

>  Sample Input    
>1   
3 3 4 20  
0 1 1 1  
0 0 1 1  
0 1 1 1   
1 1 1 1   
1 0 0 1   
0 1 1 1  
0 0 0 0     
0 1 1 0   
0 1 1 0     

>   Sample Output    
>11  

## *题解*
 本题主要是三维bfs+剪枝，上代码：

```cpp 
#include <cstring>
#include <cstdio>
#include <queue>
#include <cmath>
using namespace std;
int map[55][55][55];
bool vis[55][55][55];
int dir[6][3]={1,0,0,-1,0,0,0,0,1,0,0,-1,0,1,0,0,-1,0};  
int a,b,c,time;
struct node
{
    int x,y,z,steps;
};
int bfs()
{
    node now,next;
    queue<node> q;
    now.x=now.y=now.z=now.steps=0;
    memset(vis,false,sizeof vis);
    vis[0][0][0]=true;
    q.push(now);
    while(!q.empty())
    {
        now=q.front();
        q.pop();
        if(now.steps>time)  
            return -1; //不剪枝你能过？
        if(now.x==a-1&&now.y==b-1&&now.z==c-1&&now.steps<=time)
            return now.steps;
        for(int i=0;i<6;i++)
        {
            next=now;
            next.x+=dir[i][0],next.y+=dir[i][1],next.z+=dir[i][2];
            if(next.x>=0 && next.x<a && next.y>=0 && next.y<b && 
            next.z>=0 && next.z<c && !vis[next.x][next.y][next.z] && 
            !map[next.x][next.y][next.z]&&next.steps<=time)
            {
                next.steps++;
                vis[next.x][next.y][next.z]=true; 
                if(abs(next.x-a+1)+abs(next.y-b+1)+abs(next.z-c+1)+next.steps>time)  
                 continue;  //不剪枝你能过？不符合要求不进队
                q.push(next);
            }
        }
    }
    return -1;
}
int main()
{
    int k;
    //freopen("input.txt","r",stdin);
    scanf("%d",&k);
    while(k--)
    {
        scanf("%d %d %d %d",&a,&b,&c,&time);
        for(int i=0;i<a;i++)
            for(int j=0;j<b;j++)
                for(int k=0;k<c;k++)
                        scanf("%d",&map[i][j][k]);//注意，一不小心挂了
        
        printf("%d\n",bfs());
    }
    return 0;
}
```